name: Java Microservices CI/CD

# Запускаем при пуше в main и вручную (workflow_dispatch)
on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  # ========================
  # 1. CI: сборка и пуш образов
  # ========================
  ci:
    name: CI – Build & Push Docker Images
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      OWNER: ${{ github.repository_owner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # если у вас есть сабмодули
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Give permission to gradlew
        run: |
          for dir in Auth_service User_service Order_service Payment_service Notification_service Analytics_service Gateway_service; do
            chmod +x "$dir/gradlew"
          done

      - name: Build all services with Gradle
        run: |
          for dir in Auth_service User_service Order_service Payment_service Notification_service Analytics_service Gateway_service; do
            lower_dir=$(echo "$dir" | tr '[:upper:]' '[:lower:]')
            docker build -t ghcr.io/${{ github.actor }}/$lower_dir:latest $dir
            docker push ghcr.io/${{ github.actor }}/$lower_dir:latest
          done


      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password:   ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker images
        run: |
          for dir in Auth_service User_service Order_service Payment_service Notification_service Analytics_service Gateway_service; do
            svc=$(echo $dir | tr '[:upper:]' '[:lower:]' | tr '_' '-')
            img=${REGISTRY}/${OWNER}/${svc}:latest
            docker build -t $img ./$dir
            docker push    $img
          done

  # ========================
  # 2. CD: деплой через Docker Compose
  # ========================
  cd:
    name: CD – Deploy with Docker Compose
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password:   ${{ secrets.GITHUB_TOKEN }}

      - name: Pull new images & restart stack
        run: |
          docker-compose pull
          docker-compose up -d
